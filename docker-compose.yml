version: "3"
services:
  nginx-proxy:
    container_name: nginx-proxy
    environment:
      DOCKER_HOST: "unix:///var/run/docker.sock"
    image: jwilder/nginx-proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    privileged: true
    userns_mode: host
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "conf:/etc/nginx/conf.d"
      - "dhparam:/etc/nginx/dhparam"
      - "certs:/etc/nginx/certs:ro"
      - "vhost:/etc/nginx/vhost.d"
      - "nginx-html:/usr/share/nginx/html"
  letsencrypt:
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    environment:
      DEFAULT_EMAIL: joth.moss@googlemail.com
      NGINX_PROXY_CONTANER: nginx-proxy
    image: jrcs/letsencrypt-nginx-proxy-companion
    privileged: true
    userns_mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/etc/nginx/certs:rw"
      - "vhost:/etc/nginx/vhost.d"
      - "nginx-html:/usr/share/nginx/html"
  rabbitmq:
    container_name: rabbitmq
    depends_on:
      - nginx-proxy
    build:
      context: "."
      dockerfile: "./docker/rabbitmq/Dockerfile"
    restart: unless-stopped
    environment:
      RMQ_ADMIN_USER: ${RMQ_ADMIN_USER}
      RMQ_ADMIN_PASS: ${RMQ_ADMIN_PASS}
      RMQ_PROD_USER: ${RMQ_PROD_USER}
      RMQ_PROD_PASS: ${RMQ_PROD_PASS}
      RMQ_SUB_USER: ${RMQ_SUB_USER}
      RMQ_SUB_PASS: ${RMQ_SUB_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,warning},{channel,warning}]"
      VIRTUAL_HOST: ${RMQ_V_HOST}
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 15672
      LETSENCRYPT_HOST: ${RMQ_V_HOST}
    ports:
      - "5672:5672"
      - "5671:5671"
  darwin:
    container_name: darwin_pp
    build:
      context: "."
      dockerfile: "./docker/darwin/Dockerfile"
    restart: unless-stopped
    environment:
      RMQ_PROD_USER: ${RMQ_PROD_USER}
      RMQ_PROD_PASS: ${RMQ_PROD_PASS}
      LOG_DIR: "/var/www/logs"
      LOG_LEVEL: "DEBUG"
      RMQ_PORT: ${RMQ_PORT}
      RMQ_HOST: ${RMQ_HOST}
      DARWIN_TOPIC: "darwin.pushport-v16"
      DARWIN_PORT: 61613
      DARWIN_HOST: "darwin-dist-44ae45.nationalrail.co.uk"
      DARWIN_USER: ${DARWIN_USER}
      DARWIN_PASS: ${DARWIN_PASS}
      DARWIN_STATUS: "darwin.status"
    volumes:
      - "logs:/var/www/logs"
  nrod:
    container_name: nrod
    build:
      context: "."
      dockerfile: "./docker/nrod/Dockerfile"
    restart: unless-stopped
    environment:
      RMQ_PROD_USER: ${RMQ_PROD_USER}
      RMQ_PROD_PASS: ${RMQ_PROD_PASS}
      NROD_USER: ${NROD_USER}
      NROD_PASS: ${NROD_PASS}
      LOG_DIR: "/var/www/logs"
      LOG_LEVEL: "DEBUG"
      RMQ_PORT: ${RMQ_PORT}
      RMQ_HOST: ${RMQ_HOST}
    volumes:
      - "logs:/var/www/logs"
  ntfy:
    container_name: ntfy
    restart: unless-stopped
    image: binwiederhier/ntfy
    command: serve
    environment:
      NTFY_BASE_URL: ${NTFY_V_HOST}
      NTFY_CACHE_FILE: /var/lib/ntfy/cache.db
      VIRTUAL_HOST: ${NTFY_V_HOST}
      LETSENCRYPT_HOST: ${NTFY_V_HOST}
      NTFY_BEHIND_PROXY: "true"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 80
    volumes:
      - ./:/var/lib/ntfy
    # ports:
    #   - 80:80
  prometheus:
    container_name: prometheus-svc
    restart: unless-stopped
    image: prom/prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus:/etc/prometheus/
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: "1000"
    restart: unless-stopped
    environment:
      - GF_AUTH_BASIC_ENABLED=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - VIRTUAL_HOST=${GRAFANA_V_HOST}
      - VIRTUAL_PROTO=http
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${GRAFANA_V_HOST}
      - GF_SECURITY_ADMIN_PASSWORD=${GFA_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GFA_USER}
      # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  # loki:
  #   container_name: loki
  #   image: grafana/loki:1.4.1
  #   command: -config.file=/etc/loki/local-config.yaml
  promtail:
    container_name: promtail
    image: grafana/promtail:1.4.1
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail/docker-config.yml:/etc/promtail/docker-config.yml
    command: -config.file=/etc/promtail/docker-config.yml
  grafana-dashboards:
    container_name: grafana-dashboard
    image: alpine:3.10
    depends_on:
      - grafana
    volumes:
      - ./grafana:/grafana
    command: >
      /bin/sh -c "
        apk add --no-cache curl
        sleep 5s
        cd /grafana
        curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' --user '${GFA_USER}:${GFA_PASSWORD}' -d @datasources.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' --user '${GFA_USER}:${GFA_PASSWORD}' -d @OpenRailDataGatewayDashboard.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' --user '${GFA_USER}:${GFA_PASSWORD}' -d @RabbitMQDashboard.json
        curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' --user '${GFA_USER}:${GFA_PASSWORD}' -d @Darwin.json"
  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: always
    environment:
      - LETSENCRYPT_HOST=${ADMIN_PT_HOST}
      - VIRTUAL_HOST=${ADMIN_PT_HOST}
      - VIRTUAL_PROTO=http
      - VIRTUAL_PORT=9000
volumes:
  logs: ~
  conf: ~
  dhparam: ~
  certs: ~
  vhost: ~
  nginx-html: ~
  portainer-data: ~
