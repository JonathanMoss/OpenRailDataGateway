version: "3"
services:
  rabbitmq:
    build:
      context: "."
      dockerfile: "./docker/rabbitmq/Dockerfile"
    restart: unless-stopped
    environment:
      RMQ_ADMIN_USER: ${RMQ_ADMIN_USER}
      RMQ_ADMIN_PASS: ${RMQ_ADMIN_PASS}
      RMQ_PROD_USER: ${RMQ_PROD_USER}
      RMQ_PROD_PASS: ${RMQ_PROD_PASS}
      RMQ_SUB_USER: ${RMQ_SUB_USER}
      RMQ_SUB_PASS: ${RMQ_SUB_PASS}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,warning},{channel,warning}]"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
  nrod:
    build:
      context: "."
      dockerfile: "./docker/nrod/Dockerfile"
    restart: unless-stopped
    environment:
      RMQ_PROD_USER: ${RMQ_PROD_USER}
      RMQ_PROD_PASS: ${RMQ_PROD_PASS}
      NROD_USER: ${NROD_USER}
      NROD_PASS: ${NROD_PASS}
      LOG_DIR: "/var/www/logs"
      LOG_LEVEL: "DEBUG"
      RMQ_PORT: ${RMQ_PORT}
      RMQ_HOST: ${RMQ_HOST}
    ports:
      - "8000:8000"
    volumes:
      - "logs:/var/www/logs"
  prometheus:
    container_name: prometheus-svc
    restart: unless-stopped
    image: prom/prometheus
    ports:
      - "9091:9090"
    command: --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus:/etc/prometheus/
  grafana:
    image: grafana/grafana:5.0.4
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
volumes:
  logs: ~
